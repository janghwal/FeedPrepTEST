name: CI/CD Pipeline

on:
  push:
    branches:
      - 'feat/**'
  pull_request:
    branches:
      - dev
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.base_ref == 'dev' || github.base_ref == 'main'

    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          FEEDPREP_ACCESS_KEY: ${{ secrets.FEEDPREP_ACCESS_KEY }}
          FEEDPREP_SECRET_KEY: ${{ secrets.FEEDPREP_SECRET_KEY }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}

  docker-build-push:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build jar
        run: ./gradlew bootJar

      - name: Docker build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/feedprep:1.0 .

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/feedprep:1.0

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull juhyeong37/fp:1.0

            CONTAINER_NAME=fp-container

            if [ -n "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
              docker stop $CONTAINER_NAME
              docker rm $CONTAINER_NAME
            fi

            docker run -d --name $CONTAINER_NAME \
              -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              -e FEEDPREP_ACCESS_KEY="${{ secrets.FEEDPREP_ACCESS_KEY }}" \
              -e FEEDPREP_SECRET_KEY="${{ secrets.FEEDPREP_SECRET_KEY }}" \
              -e JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
              -e REDIS_URL="${{ secrets.REDIS_URL }}" \
              -e DB_URL="${{ secrets.DB_URL }}" \
              juhyeong37/feedprep:1.0